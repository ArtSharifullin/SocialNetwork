// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SocialNetwork.Persistence.Contexts;

#nullable disable

namespace SocialNetwork.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250425141636_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SocialNetwork.Domain.Entities.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EventId"));

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<int>("GoingCount")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Img")
                        .HasColumnType("text");

                    b.Property<int>("IntrestedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("EventId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            Author = "UK BRANDS",
                            Date = "WED JUL 10,2024 AT 10PM",
                            GoingCount = 951,
                            Id = 0,
                            Img = "~/images/events/img-1.jpg",
                            IntrestedCount = 742,
                            Name = "The Global Creative"
                        },
                        new
                        {
                            EventId = 2,
                            Author = "Catiana",
                            Date = "Upcomming",
                            GoingCount = 452,
                            Id = 0,
                            Img = "~/images/events/img-2.jpg",
                            IntrestedCount = 153,
                            Name = "Wedding trend Ideas"
                        },
                        new
                        {
                            EventId = 3,
                            Author = "Morleam",
                            Date = "Next week",
                            GoingCount = 753,
                            Id = 0,
                            Img = "~/images/events/img-3.jpg",
                            IntrestedCount = 651,
                            Name = "About Safety and Flight"
                        },
                        new
                        {
                            EventId = 4,
                            Author = "UK BRANDS",
                            Date = "Tomorrow",
                            GoingCount = 614,
                            Id = 0,
                            Img = "~/images/events/img-4.jpg",
                            IntrestedCount = 824,
                            Name = "Perspective is everything"
                        },
                        new
                        {
                            EventId = 5,
                            Author = "Global Hub",
                            Date = "FRI AUG 15,2024 AT 8PM",
                            GoingCount = 567,
                            Id = 0,
                            Img = "~/images/events/img-1.jpg",
                            IntrestedCount = 345,
                            Name = "Creative Minds Meetup"
                        },
                        new
                        {
                            EventId = 6,
                            Author = "TechWorld",
                            Date = "Next month",
                            GoingCount = 456,
                            Id = 0,
                            Img = "~/images/events/img-2.jpg",
                            IntrestedCount = 234,
                            Name = "Tech Innovators Summit"
                        },
                        new
                        {
                            EventId = 7,
                            Author = "ArtLovers",
                            Date = "SAT SEP 20,2024 AT 6PM",
                            GoingCount = 678,
                            Id = 0,
                            Img = "~/images/events/img-3.jpg",
                            IntrestedCount = 456,
                            Name = "Art Gallery Opening"
                        },
                        new
                        {
                            EventId = 8,
                            Author = "MelodyMakers",
                            Date = "This weekend",
                            GoingCount = 789,
                            Id = 0,
                            Img = "~/images/events/img-4.jpg",
                            IntrestedCount = 567,
                            Name = "Music Festival Night"
                        },
                        new
                        {
                            EventId = 9,
                            Author = "Entrepreneurs",
                            Date = "MON OCT 5,2024 AT 2PM",
                            GoingCount = 890,
                            Id = 0,
                            Img = "~/images/events/img-1.jpg",
                            IntrestedCount = 678,
                            Name = "Startup Pitch Day"
                        },
                        new
                        {
                            EventId = 10,
                            Author = "LensCrafters",
                            Date = "Next Friday",
                            GoingCount = 901,
                            Id = 0,
                            Img = "~/images/events/img-2.jpg",
                            IntrestedCount = 789,
                            Name = "Photography Workshop"
                        },
                        new
                        {
                            EventId = 11,
                            Author = "FoodFanatics",
                            Date = "TUE NOV 10,2024 AT 7PM",
                            GoingCount = 101,
                            Id = 0,
                            Img = "~/images/events/img-3.jpg",
                            IntrestedCount = 890,
                            Name = "Foodies Gathering"
                        },
                        new
                        {
                            EventId = 12,
                            Author = "ReadersUnite",
                            Date = "Next Tuesday",
                            GoingCount = 112,
                            Id = 0,
                            Img = "~/images/events/img-4.jpg",
                            IntrestedCount = 901,
                            Name = "Book Club Meeting"
                        },
                        new
                        {
                            EventId = 13,
                            Author = "FitLife",
                            Date = "THU DEC 15,2024 AT 5AM",
                            GoingCount = 223,
                            Id = 0,
                            Img = "~/images/events/img-1.jpg",
                            IntrestedCount = 101,
                            Name = "Fitness Bootcamp"
                        },
                        new
                        {
                            EventId = 14,
                            Author = "ZenMasters",
                            Date = "Every Sunday",
                            GoingCount = 334,
                            Id = 0,
                            Img = "~/images/events/img-2.jpg",
                            IntrestedCount = 223,
                            Name = "Yoga and Meditation"
                        },
                        new
                        {
                            EventId = 15,
                            Author = "CodeNinjas",
                            Date = "Next Saturday",
                            GoingCount = 445,
                            Id = 0,
                            Img = "~/images/events/img-3.jpg",
                            IntrestedCount = 334,
                            Name = "Coding Hackathon"
                        },
                        new
                        {
                            EventId = 16,
                            Author = "GameOn",
                            Date = "Next Monday",
                            GoingCount = 556,
                            Id = 0,
                            Img = "~/images/events/img-4.jpg",
                            IntrestedCount = 445,
                            Name = "Gaming Tournament"
                        },
                        new
                        {
                            EventId = 17,
                            Author = "Cinephiles",
                            Date = "FRI JAN 20,2025 AT 9PM",
                            GoingCount = 667,
                            Id = 0,
                            Img = "~/images/events/img-1.jpg",
                            IntrestedCount = 556,
                            Name = "Film Screening Night"
                        },
                        new
                        {
                            EventId = 18,
                            Author = "DanceLovers",
                            Date = "Next Thursday",
                            GoingCount = 778,
                            Id = 0,
                            Img = "~/images/events/img-2.jpg",
                            IntrestedCount = 667,
                            Name = "Dance Workshop"
                        },
                        new
                        {
                            EventId = 19,
                            Author = "StyleIcons",
                            Date = "SAT FEB 5,2025 AT 4PM",
                            GoingCount = 889,
                            Id = 0,
                            Img = "~/images/events/img-3.jpg",
                            IntrestedCount = 778,
                            Name = "Fashion Show Extravaganza"
                        },
                        new
                        {
                            EventId = 20,
                            Author = "Connectors",
                            Date = "Next Wednesday",
                            GoingCount = 990,
                            Id = 0,
                            Img = "~/images/events/img-4.jpg",
                            IntrestedCount = 889,
                            Name = "Networking Mixer"
                        },
                        new
                        {
                            EventId = 21,
                            Author = "ScienceGeeks",
                            Date = "MON MAR 10,2025 AT 11AM",
                            GoingCount = 111,
                            Id = 0,
                            Img = "~/images/events/img-1.jpg",
                            IntrestedCount = 990,
                            Name = "Science Fair"
                        },
                        new
                        {
                            EventId = 22,
                            Author = "KindHearts",
                            Date = "Next Friday",
                            GoingCount = 222,
                            Id = 0,
                            Img = "~/images/events/img-2.jpg",
                            IntrestedCount = 111,
                            Name = "Charity Gala Dinner"
                        },
                        new
                        {
                            EventId = 23,
                            Author = "PawsAndClaws",
                            Date = "TUE APR 15,2025 AT 3PM",
                            GoingCount = 333,
                            Id = 0,
                            Img = "~/images/events/img-3.jpg",
                            IntrestedCount = 222,
                            Name = "Pet Adoption Day"
                        },
                        new
                        {
                            EventId = 24,
                            Author = "NatureExplorers",
                            Date = "Next Monday",
                            GoingCount = 444,
                            Id = 0,
                            Img = "~/images/events/img-4.jpg",
                            IntrestedCount = 333,
                            Name = "Outdoor Adventure"
                        },
                        new
                        {
                            EventId = 25,
                            Author = "KitchenExperts",
                            Date = "THU MAY 20,2025 AT 2PM",
                            GoingCount = 555,
                            Id = 0,
                            Img = "~/images/events/img-1.jpg",
                            IntrestedCount = 444,
                            Name = "Cooking Masterclass"
                        },
                        new
                        {
                            EventId = 26,
                            Author = "CraftyHands",
                            Date = "Next Sunday",
                            GoingCount = 666,
                            Id = 0,
                            Img = "~/images/events/img-2.jpg",
                            IntrestedCount = 555,
                            Name = "DIY Craft Workshop"
                        },
                        new
                        {
                            EventId = 27,
                            Author = "Polyglots",
                            Date = "FRI JUN 25,2025 AT 7PM",
                            GoingCount = 777,
                            Id = 0,
                            Img = "~/images/events/img-3.jpg",
                            IntrestedCount = 666,
                            Name = "Language Exchange Meetup"
                        },
                        new
                        {
                            EventId = 28,
                            Author = "GameNight",
                            Date = "Next Tuesday",
                            GoingCount = 888,
                            Id = 0,
                            Img = "~/images/events/img-4.jpg",
                            IntrestedCount = 777,
                            Name = "Board Games Night"
                        },
                        new
                        {
                            EventId = 29,
                            Author = "VRWorld",
                            Date = "SAT JUL 30,2025 AT 10AM",
                            GoingCount = 999,
                            Id = 0,
                            Img = "~/images/events/img-1.jpg",
                            IntrestedCount = 888,
                            Name = "Virtual Reality Experience"
                        },
                        new
                        {
                            EventId = 30,
                            Author = "LaughOutLoud",
                            Date = "Next Thursday",
                            GoingCount = 1010,
                            Id = 0,
                            Img = "~/images/events/img-2.jpg",
                            IntrestedCount = 999,
                            Name = "Comedy Night Live"
                        });
                });

            modelBuilder.Entity("SocialNetwork.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Email")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int?>("Phone")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Web")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = 0,
                            Id = 0,
                            Phone = 1,
                            Web = 1
                        });
                });

            modelBuilder.Entity("SocialNetwork.Domain.Entities.Notify", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Followed")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int?>("LikedPhoto")
                        .HasColumnType("integer");

                    b.Property<int?>("Mentioned")
                        .HasColumnType("integer");

                    b.Property<int?>("SendMessage")
                        .HasColumnType("integer");

                    b.Property<int?>("SendRequest")
                        .HasColumnType("integer");

                    b.Property<int?>("SharedPhoto")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId");

                    b.ToTable("Notify");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Followed = 0,
                            Id = 0,
                            LikedPhoto = 1,
                            Mentioned = 1,
                            SendMessage = 0,
                            SendRequest = 1,
                            SharedPhoto = 1
                        });
                });

            modelBuilder.Entity("SocialNetwork.Domain.Entities.Post", b =>
                {
                    b.Property<int>("UserPageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserPageId"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DislikeCount")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("LikeCount")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserPageId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            UserPageId = 1,
                            Content = "Контент1",
                            DislikeCount = 1,
                            Id = 0,
                            LikeCount = 1
                        },
                        new
                        {
                            UserPageId = 2,
                            Content = "Контент2",
                            DislikeCount = 2,
                            Id = 0,
                            LikeCount = 2
                        },
                        new
                        {
                            UserPageId = 3,
                            Content = "Контент3",
                            DislikeCount = 3,
                            Id = 0,
                            LikeCount = 3
                        });
                });

            modelBuilder.Entity("SocialNetwork.Domain.Entities.Privacy", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<int?>("Activities")
                        .HasColumnType("integer");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("FollowMe")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int?>("MessageMe")
                        .HasColumnType("integer");

                    b.Property<int?>("MyTags")
                        .HasColumnType("integer");

                    b.Property<int?>("SearchEngine")
                        .HasColumnType("integer");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId");

                    b.ToTable("Privacy");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Activities = 1,
                            FollowMe = 0,
                            Id = 0,
                            MessageMe = 0,
                            MyTags = 2,
                            SearchEngine = 1,
                            Status = 0
                        });
                });

            modelBuilder.Entity("SocialNetwork.Domain.Entities.SocialLink", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Facebook")
                        .HasColumnType("text");

                    b.Property<string>("Github")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Instagram")
                        .HasColumnType("text");

                    b.Property<string>("Twitter")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Youtube")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("SocialLinks");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Facebook = "facebook",
                            Github = "github",
                            Id = 0,
                            Instagram = "instagram",
                            Twitter = "twitter",
                            Youtube = "youtube"
                        });
                });

            modelBuilder.Entity("SocialNetwork.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Img")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("Relationship")
                        .HasColumnType("integer");

                    b.Property<int>("TwoFactorAuthentication")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Bio = "Хочу клубничку",
                            Email = "deniskapipiska@loh.ru",
                            Gender = 1,
                            Id = 0,
                            Img = "~/images/avatars/avatar-7.jpg",
                            Name = "Денис",
                            Password = "lublumujikov",
                            Relationship = 1,
                            TwoFactorAuthentication = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
